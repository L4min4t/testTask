@model EditCategoryModel

@{
    ViewData["Title"] = "Editing category";
}

<form id="category-form" asp-controller="Category" asp-action="Edit" method="post" class="w-50 mx-auto mt-5">
    <div class="form-group">
        <label for="Name" class="fs-5">Name</label>
        <input type="text" asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="ParentCategoryId" class="fs-5">Choose parent category</label>
        <div id="category-radiobuttons">
            <div id="loading-spinner" style="display: none;">
                <i class="fa fa-spinner fa-spin"></i> Loading Categories...
            </div>
        </div>
        <span asp-validation-for="ParentCategoryId" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary mt-4" id="submit-button">Update</button>
</form>


<script>
    document.getElementById('loading-spinner').style.display = 'block';
    
    var parentCategory = @Html.Raw(Json.Serialize(Model == null ? -1 : Model.ParentCategoryId));
    var categoryId = @Html.Raw(Json.Serialize(Model == null ? -1 : Model.Id));
    
    fetch('/api/CategoryApi')
        .then(response => response.json())
        .then(categories => {
            const categoryRadiobuttons = document.getElementById('category-radiobuttons');
 
            const noParentRadiobutton = document.createElement('input');
            noParentRadiobutton.type = 'radio';
            noParentRadiobutton.name = 'ParentCategoryId';
            noParentRadiobutton.value = ''; // Set value to null
            noParentRadiobutton.id = 'category-no-parent';
            noParentRadiobutton.checked = parentCategory === null;

            const noParentLabel = document.createElement('label');
            noParentLabel.htmlFor = 'category-no-parent';
            noParentLabel.appendChild(document.createTextNode('No Parent Category'));

            categoryRadiobuttons.appendChild(noParentRadiobutton);
            categoryRadiobuttons.appendChild(noParentLabel);
            categoryRadiobuttons.appendChild(document.createElement('br'));
                        
            categories.forEach(category => {
                if (category.id !== categoryId){
                    const radiobutton = document.createElement('input');
                    radiobutton.type = 'radio';
                    radiobutton.name = 'ParentCategoryId';
                    radiobutton.value = category.id;
                    radiobutton.id = 'category-' + category.id;
                    radiobutton.checked = category.id === parentCategory;
        
                    const label = document.createElement('label');
                    label.htmlFor = 'category-' + category.id;
                    label.appendChild(document.createTextNode(category.name));
        
                    categoryRadiobuttons.appendChild(radiobutton);
                    categoryRadiobuttons.appendChild(label);
                    categoryRadiobuttons.appendChild(document.createElement('br'));
                }               
            });
            
            document.getElementById('loading-spinner').style.display = 'none';
            
        })
        .catch(error => {
            console.error('Error fetching categories:', error);
            document.getElementById('loading-spinner').style.display = 'none';
        });
</script>